-- The GROUP BY statement groups rows that have the same values into summary rows, like "find the number of customers in each country".
-- The GROUP BY statement is often used with aggregate functions (COUNT(), MAX(), MIN(), SUM(), AVG()) to group the result-set by one or more columns.


-- GROUP BY Syntax

-- SELECT column1, column2, ...
-- FROM table_name
-- WHERE condition
-- GROUP BY column1, column2, ...


-- Example: Get the total number of customers in each country
SELECT country, COUNT(*) AS total_customers
FROM customers
GROUP BY country;


-- Example: Get the average age of customers in each country
SELECT country, AVG(age) AS average_age
FROM customers
GROUP BY country;


-- Example: Get the number of customers in each country who have made at least 5 purchases
SELECT country, COUNT(*) AS total_customers
FROM customers
    JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY country
HAVING COUNT(*) >= 5;


-- Example: Get the total revenue generated by each country
SELECT country, SUM(order_amount) AS total_revenue
FROM customers
    JOIN orders ON customers.customer_id = orders.customer_id
GROUP BY country;


-- Example: Get the average order amount per customer in each country   

SELECT country, AVG(order_amount) AS average_order_amount
FROM customers
    JOIN orders ON customers.customer_id = orders.customer_id
    JOIN order_items ON orders.order_id = order_items.order_id
GROUP BY country;


-- Example: Get the top 5 most popular products sold in each country
SELECT country, product_name, SUM(quantity) AS total_sold
FROM customers
    JOIN orders ON customers.customer_id = orders.customer_id
    JOIN order_items ON orders.order_id = order_items.order_id
    JOIN products ON order_items.product_id = products.product_id
GROUP BY country, product_name
ORDER BY country, total_sold DESC
LIMIT 5;


-- Example: Get the number of customers who have made purchases in each country, but exclude any customers who have made purchases in the last 30 days

SELECT country, COUNT(*) AS total_customers
FROM customers
    JOIN orders ON customers.customer_id = orders.customer_id
    JOIN order_items ON orders.order_id = order_items.order_id
    JOIN products ON order_items.product_id = products.product_id
WHERE order_date >= DATE_SUB(NOW(), INTERVAL 30 DAY)
    AND order_date <= NOW()
GROUP BY country;


-- Example: Get the average order amount per customer in each country, excluding any customers who have made purchases in the last 30 days

SELECT country, AVG(order_amount) AS average_order_amount
FROM customers
    JOIN orders ON customers.customer_id = orders.customer_id
    JOIN order_items ON orders.order_id = order_items.order_id
    JOIN products ON order_items.product_id = products.product_id
WHERE order_date >= DATE_SUB(NOW(), INTERVAL 30 DAY)
    AND order_date <= NOW()
GROUP BY country;


